{
  "Routes": [ // Ocelot üzerinde tanımlanan yönlendirme kuralları
    // 🔹----------------------------- ProductDiscounts Özel Rotası -----------------------------
    // Bu rota, ürün indirimlerini (ProductDiscounts) doğrudan Catalog mikroservisine yönlendirir.
    // NOT: Bu route genel /api/{everything} tanımının ÜSTÜNDE olmalıdır, çünkü Ocelot route’ları yukarıdan aşağı okur
    // ve ilk eşleşeni bulduğunda diğerlerini denemez. Eğer bu aşağıdaysa, genel rota tarafından “yutulur” ve boş sonuç döner.
    {
      "DownstreamPathTemplate": "/api/ProductDiscounts", // Catalog API tarafındaki gerçek endpoint
      "DownstreamScheme": "http", // Hedef (downstream) protokolü
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost", // Catalog API adresi
          "Port": 1002 // Catalog API portu
        }
      ],
      "UpstreamPathTemplate": "/services/catalog/ProductDiscounts", // Gateway üzerinden erişilecek endpoint
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ] // Bu route için izin verilen HTTP metodları
    },
    // -------------------------------Catalog Mikroservisi---------------------------
    {
      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1002 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/catalog/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "CatalogFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    //-----------------------------Discount Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1003 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "DiscountFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }
    },
    //-----------------------------Order Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1004 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "OrderFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    //-----------------------------Kargo Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1005 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/cargo/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "CargoFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    //-----------------------------Basket Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1006 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "BasketFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    //-----------------------------Mesaj Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1010 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/message/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "MessageFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    //-----------------------------Comment Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1007 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/comment/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "CommentFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    //-----------------------------Payment Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1008 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/payment/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "PaymentFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }


    },
    //-----------------------------Images Mikroservisi----------------------------
    {

      "DownstreamPathTemplate": "/api/{everything}", // İstek gateway'den hedef servise giderken kullanılacak yol şablonu (wildcard: {everything})
      "DownstreamScheme": "http", // Hedef (downstream) servisin protokolü
      "DownstreamHostAndPorts": [ // Hedef servisin host ve port bilgileri
        {
          "Host": "localhost", // Hedef servis adresi
          "Port": 1009 // Hedef servis portu (örn: Catalog API)
        }
      ],
      "UpstreamPathTemplate": "/services/images/{everything}", // İstemcinin gateway'e çağıracağı yol şablonu
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Bu route için izin verilen HTTP metodları
      "UpstreamScheme": "http", // Gateway'e gelen isteklerin beklenen protokolü
      "AuthenticationOptions": { // Bu route için kimlik doğrulama/izin ayarları
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Gateway'de tanımlı auth şemasının adı
        "AllowedScopes": [ "ImagesFullPermission" ] // Bu route'a erişmek için gereken OAuth2 scope(lar)ı
      }

    },
    // 🔹 Ürün + İndirimli ürünleri gateway üzerinden çekmek için özel route
    {
      "DownstreamPathTemplate": "/api/Products/GetProductsWithDiscount",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 1002
        }
      ],
      "UpstreamPathTemplate": "/gateway/products-with-discount",
      "UpstreamHttpMethod": [ "Get" ]
    }

  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5000" // Gateway'in dış dünyaya açıldığı temel adres
  }
}
