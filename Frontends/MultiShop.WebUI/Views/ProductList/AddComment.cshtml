@model MultiShop.DTOLayer.CommentDTOs.CreateCommentDTO

@if (User.Identity.IsAuthenticated)
{
    <div class="premium-comment-form p-4 rounded-4 shadow-sm bg-white border-0">
        <h4 class="fw-bold mb-3 d-flex align-items-center">
            <i class="fa fa-pen text-warning me-2"></i>
            <span>Bir Yorum Bırakın</span>
        </h4>

        <form id="commentForm" method="post">
            <input type="hidden" name="ProductID" value="@Model.ProductID" />
            <textarea class="form-control comment-input" rows="4"
                  name="UserCommentDetail" placeholder="Yorumunuzu buraya yazın..."></textarea>

            <div class="text-end mt-3">
                <button type="submit" class="btn btn-premium">
                    <i class="fa fa-paper-plane me-2"></i> Gönder
                </button>
            </div>
        </form>
    </div>
}
else
{
    <div class="alert alert-warning mt-4 text-dark fw-semibold shadow-sm border-0 d-flex align-items-center">
        <i class="fa fa-lock me-2 fs-5 text-dark"></i>
        <span>
            Yorum yapabilmek için lütfen&nbsp;
            <a href="/Login/Index" class="text-dark text-decoration-underline">giriş yapın</a>.
        </span>
    </div>
}

<style>
    .premium-comment-form {
        background: #fff;
        border-radius: 18px;
        transition: all .3s ease;
    }

        .premium-comment-form:hover {
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        }

    .comment-input {
        border-radius: 12px;
        border: 1px solid #ddd;
        transition: all .3s ease;
        resize: none;
    }

        .comment-input:focus {
            border-color: #f2c200;
            box-shadow: 0 0 0 3px rgba(242, 194, 0, 0.25);
        }

    .btn-premium {
        background: #f2c200;
        color: #111;
        font-weight: 700;
        border-radius: 10px;
        padding: 10px 28px;
        transition: all .25s ease;
    }

        .btn-premium:hover {
            background: #111;
            color: #fff;
        }

    .alert-warning {
        background: rgba(255, 247, 180, 0.6);
        border: 1px solid #f2c200;
        border-radius: 10px;
    }

    .toast-box {
        position: fixed;
        bottom: 25px;
        right: 25px;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        color: #111;
        padding: 14px 18px;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        z-index: 9999;
        opacity: 0;
        transform: translateY(20px);
        transition: all .3s ease;
    }

        .toast-box.show {
            opacity: 1;
            transform: translateY(0);
        }

    /* 🎇 Yeni eklenen yorum animasyonu */
    .new-comment {
        background: #fffbe5;
        border-left: 4px solid #f2c200;
        border-radius: 6px;
        padding: 8px;
        margin-bottom: 12px;
        animation: fadeInUp .5s ease;
    }
    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("commentForm");
        const reviewList = document.querySelector(".review-list"); // Yorumların listelendiği alan
        if (!form) return;

        form.addEventListener("submit", async e => {
            e.preventDefault();

            const data = {
                ProductID: form.querySelector("input[name='ProductID']").value,
                UserCommentDetail: form.querySelector("textarea[name='UserCommentDetail']").value,
                UserCommentRating: 5
            };

            const resp = await fetch("/ProductList/AddComment", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            });

            const result = await resp.json();

            if (result.success) {
                showToast("✅ Yorum eklendi!");
                form.reset();

                // 💬 DOM'a anında ekle
                const comment = result.comment;
                const imageSrc = comment.image && comment.image !== "test" ? comment.image : "/img/default-user.png";

                const newItem = document.createElement("div");
                newItem.className = "review-item new-comment border-bottom pb-3";
                newItem.innerHTML = `
                    <div class="d-flex align-items-center mb-2">
                        <img src="${imageSrc}" width="45" height="45" class="rounded-circle me-2" />
                        <strong>${comment.name}</strong>
                        <span class="ms-2 text-muted small">${comment.date}</span>
                    </div>
                    <p class="mb-0">${comment.detail}</p>
                `;

                if (reviewList) {
                    reviewList.insertBefore(newItem, reviewList.firstChild);
                    newItem.scrollIntoView({ behavior: "smooth", block: "center" });
                }
            } else {
                showToast("⚠️ " + result.message);
            }
        });

        function showToast(msg) {
            const toast = document.createElement("div");
            toast.className = "toast-box";
            toast.textContent = msg;
            document.body.appendChild(toast);
            requestAnimationFrame(() => toast.classList.add("show"));
            setTimeout(() => {
                toast.classList.remove("show");
                setTimeout(() => toast.remove(), 300);
            }, 1800);
        }
    });
</script>
