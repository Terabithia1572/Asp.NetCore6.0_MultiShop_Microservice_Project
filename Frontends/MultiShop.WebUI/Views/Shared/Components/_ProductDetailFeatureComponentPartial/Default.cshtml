@model UpdateProductDTO
@{
    var showVariants = (bool)(ViewBag.ShowVariantOptions ?? false);
}

<div class="col-lg-7 h-auto mb-4">
    <div class="product-detail-box shadow-sm p-4 rounded-4 bg-white">

        <!-- Ürün Başlığı -->
        <h2 class="fw-bold text-dark mb-2">@Model.ProductName</h2>

        <!-- Yıldız Değerlendirme -->
        <div class="d-flex align-items-center mb-3">
            <div class="text-warning me-2">
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star-half-alt"></i>
                <i class="far fa-star"></i>
            </div>
            <small class="text-muted">(0 Değerlendirme)</small>
        </div>

        <!-- Fiyat -->
        <div class="price-section mb-4">
            <span class="product-price">@String.Format("{0:0.##}", Model.ProductPrice) ₺</span>
        </div>

        <!-- Açıklama -->
        <p class="text-muted mb-4 lh-base">@Model.ProductDescription</p>

        <!-- 🧩 Dinamik Özellikler -->
        @if (showVariants)
        {
            <div class="mb-4">
                <strong class="text-dark d-block mb-2">Bedenler:</strong>
                <div class="size-selector d-flex flex-wrap gap-2">
                    @foreach (var size in new[] { "36", "37", "38", "39", "40", "41", "42" })
                    {
                        <div class="size-item">@size</div>
                    }
                </div>
            </div>

            <div class="mb-4">
                <strong class="text-dark d-block mb-2">Renkler:</strong>
                <div class="color-selector d-flex flex-wrap gap-2">
                    @foreach (var color in new[] { "Siyah", "Beyaz", "Kırmızı", "Mavi", "Yeşil" })
                    {
                        <div class="color-item">@color</div>
                    }
                </div>
            </div>
        }

        <!-- 🛒 Miktar + Sepete Ekle -->
        <div class="d-flex align-items-center mb-4 pt-2 flex-wrap gap-3">
            <div class="quantity-group d-flex align-items-center">
                <button class="qty-btn minus"><i class="fa fa-minus"></i></button>
                <input type="text" class="qty-input" value="1">
                <button class="qty-btn plus"><i class="fa fa-plus"></i></button>
            </div>

            <button class="btn btn-cart add-to-cart" data-id="@Model.ProductID">
                <i class="fa fa-shopping-cart me-2"></i>Sepete Ekle
            </button>
        </div>

        <!-- 🌐 Sosyal Medya -->
        <div class="d-flex align-items-center pt-2">
            <strong class="text-dark me-2">Paylaş:</strong>
            <div class="d-flex gap-3 social-icons ms-2">
                <a href="#" class="social-link"><i class="fab fa-facebook-f"></i></a>
                <a href="#" class="social-link"><i class="fab fa-twitter"></i></a>
                <a href="#" class="social-link"><i class="fab fa-linkedin-in"></i></a>
                <a href="#" class="social-link"><i class="fab fa-pinterest"></i></a>
            </div>
        </div>
    </div>
</div>

<style>
    /* === KUTU === */
    .product-detail-box {
        border: 1px solid #eee;
        transition: all .3s ease;
    }

        .product-detail-box:hover {
            box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        }

    /* === FİYAT === */
    .product-price {
        font-size: 1.8rem;
        font-weight: 800;
        color: #f2c200;
    }

    /* === BEDEN / RENK === */
    .size-item, .color-item {
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 7px 16px;
        font-weight: 600;
        background: #f8f8f8;
        color: #222;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .size-item:hover, .color-item:hover {
            background-color: #f2c200;
            border-color: #f2c200;
            color: #111;
        }

        .size-item.active, .color-item.active {
            background-color: #111;
            border-color: #111;
            color: #fff;
        }

    /* === MİKTAR === */
    .quantity-group {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
    }

    .qty-btn {
        background: #f8f8f8;
        border: none;
        padding: 10px 15px;
        cursor: pointer;
        transition: all .2s ease;
    }

        .qty-btn:hover {
            background: #f2c200;
            color: #111;
        }

    .qty-input {
        width: 55px;
        text-align: center;
        border: none;
        font-weight: 600;
        color: #333;
    }

    /* === SEPETE EKLE === */
    .btn-cart {
        background: #f2c200;
        color: #111;
        font-weight: 700;
        padding: 11px 26px;
        border-radius: 10px;
        transition: all .25s ease;
        border: none;
    }

        .btn-cart:hover {
            background: #111;
            color: #fff;
            transform: translateY(-2px);
        }

    /* === SOSYAL === */
    .social-icons {
        gap: 14px !important;
    }

    .social-link {
        color: #333;
        font-size: 1.1rem;
        transition: all .3s ease;
    }

        .social-link:hover {
            color: #f2c200;
            transform: translateY(-2px);
        }

    /* === TOAST === */
    .toast-box {
        position: fixed;
        bottom: 25px;
        right: 25px;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        color: #111;
        padding: 14px 18px;
        border-radius: 14px;
        box-shadow: 0 8px 30px rgba(255, 193, 7, 0.4);
        z-index: 9999;
        opacity: 0;
        transform: translateY(20px);
        transition: all .3s ease;
    }

        .toast-box.show {
            opacity: 1;
            transform: translateY(0);
        }

    @@keyframes bump {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.15);
        }

        100% {
            transform: scale(1);
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {

        // 🔹 Renk & Beden Aktifliği
        document.querySelectorAll(".size-item, .color-item").forEach(el => {
            el.addEventListener("click", () => {
                const group = el.classList.contains("size-item") ? ".size-item" : ".color-item";
                document.querySelectorAll(group).forEach(i => i.classList.remove("active"));
                el.classList.add("active");
            });
        });

        // 🔸 Miktar Arttır / Azalt
        document.querySelectorAll(".qty-btn").forEach(btn => {
            btn.addEventListener("click", () => {
                const input = btn.parentElement.querySelector(".qty-input");
                let val = parseInt(input.value);
                if (btn.classList.contains("plus")) val++;
                if (btn.classList.contains("minus") && val > 1) val--;
                input.value = val;
            });
        });

        // 🛒 AJAX Sepete Ekle
        const buttons = document.querySelectorAll('.add-to-cart');
        buttons.forEach(btn => {
            btn.addEventListener('click', async (e) => {
                e.preventDefault();
                const id = btn.dataset.id;

                try {
                    const resp = await fetch(`/ShoppingCart/AddBasketItem?id=${id}`, { credentials: 'include' });
                    if (resp.status === 401) {
                        showToast('⚠️ Sepete ekleme başarısız! Giriş yapmalısın.');
                        return;
                    }
                    if (resp.ok) {
                        showToast('🛒 Ürün sepete eklendi!');
                        await updateCartCount();
                        await updateMiniCart();
                    } else {
                        showToast('⚠️ Sepete ekleme başarısız!');
                    }
                } catch {
                    showToast('⚠️ Sunucu hatası!');
                }
            });
        });

        async function updateCartCount() {
            const countElement = document.querySelector('#cart-count');
            try {
                const resp = await fetch('/ShoppingCart/GetCartCount', { credentials: 'include' });
                if (resp.ok) {
                    const count = await resp.text();
                    countElement.textContent = count;
                    countElement.style.animation = 'bump .4s ease';
                    setTimeout(() => countElement.style.animation = '', 400);
                }
            } catch {}
        }

        async function updateMiniCart() {
            const cart = document.querySelector('#mini-cart');
            try {
                const resp = await fetch('/ShoppingCart/GetMiniCart', { credentials: 'include' });
                if (resp.ok) {
                    const html = await resp.text();
                    cart.innerHTML = html;
                }
            } catch {}
        }

        function showToast(msg) {
            const toast = document.createElement('div');
            toast.className = 'toast-box';
            toast.textContent = msg;
            document.body.appendChild(toast);
            requestAnimationFrame(() => toast.classList.add('show'));
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 1800);
        }
    });
</script>
