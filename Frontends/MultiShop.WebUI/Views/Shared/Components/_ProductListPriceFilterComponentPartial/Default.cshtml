@model IEnumerable<dynamic>

<h5 class="filter-title mb-4">
    <i class="fa fa-tags me-2 text-warning"></i> Fiyata Göre Filtrele
</h5>

<div class="filter-card p-4 mb-4 shadow-sm rounded-4">
    <form id="priceFilterForm">
        <!-- 🔹 Tüm Fiyatlar -->
        <div class="filter-option d-flex align-items-center justify-content-between mb-3">
            <label class="filter-label">
                <input type="checkbox" name="price" value="all" checked>
                <span class="checkmark"></span>
                Tüm Fiyatlar
            </label>
            <span class="filter-count">@ViewBag.TotalCount</span>
        </div>

        <!-- 🔹 Dinamik Fiyat Aralıkları -->
        @foreach (var r in Model)
        {
            <div class="filter-option d-flex align-items-center justify-content-between mb-3">
                <label class="filter-label">
                    <input type="checkbox" name="price" value="@r.Label">
                    <span class="checkmark"></span>
                    @r.Label
                </label>
                <span class="filter-count">@r.Count</span>
            </div>
        }
    </form>
</div>

<style>
    .filter-title {
        font-size: 1.15rem;
        font-weight: 700;
        color: #111;
        border-left: 5px solid #ffcc00;
        padding-left: 10px;
        text-transform: uppercase;
        letter-spacing: 0.4px;
    }

    .filter-card {
        background: #fff;
        border-radius: 16px;
        border: 1px solid #e8e8e8;
        transition: all 0.3s ease;
    }

        .filter-card:hover {
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
        }

    .filter-option {
        position: relative;
        padding: 4px 0;
        transition: all 0.25s ease;
    }

        .filter-option:hover {
            transform: translateX(4px);
        }

    .filter-label {
        position: relative;
        padding-left: 28px;
        cursor: pointer;
        font-weight: 500;
        color: #333;
        display: flex;
        align-items: center;
    }

        .filter-label input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    .checkmark {
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        height: 18px;
        width: 18px;
        background: #f4f4f4;
        border: 2px solid #ccc;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .filter-label:hover .checkmark {
        border-color: #ffcc00;
        box-shadow: 0 0 5px rgba(255,204,0,0.3);
    }

    .filter-label input:checked ~ .checkmark {
        background: linear-gradient(180deg, #f2c200, #ffd84a);
        border-color: #f2c200;
        box-shadow: 0 0 6px rgba(255,204,0,0.5);
    }

    .checkmark::after {
        content: "";
        position: absolute;
        display: none;
        left: 5px;
        top: 2px;
        width: 4px;
        height: 8px;
        border: solid #111;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
    }

    .filter-label input:checked ~ .checkmark::after {
        display: block;
    }

    .filter-count {
        font-size: 0.85rem;
        font-weight: 600;
        color: #555;
        background: #f8f8f8;
        padding: 4px 10px;
        border-radius: 12px;
        border: 1px solid #eee;
        transition: all .3s ease;
    }

    .filter-option:hover .filter-count {
        background: #fffae6;
        border-color: #ffec99;
        color: #111;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("priceFilterForm");
        if (!form) return;

        const categoryId = "@(ViewBag.id ?? "")"; // Controller'dan kategori ID'si gelir

        form.querySelectorAll("input[name='price']").forEach(cb => {
            cb.addEventListener("change", async () => {
                const selected = Array.from(form.querySelectorAll("input[name='price']"))
                    .filter(c => c.checked && c.value !== "all")
                    .map(c => c.value);

                const ranges = selected.length ? selected.join(",") : "all";

                const resp = await fetch(`/ProductList/FilterByPrice?categoryId=${encodeURIComponent(categoryId)}&ranges=${encodeURIComponent(ranges)}`);
                const html = await resp.text();

                const target = document.querySelector(".row.pb-3");
                if (target) target.innerHTML = html;
            });
        });
    });
</script>
