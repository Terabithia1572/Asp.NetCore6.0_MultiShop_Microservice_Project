@model List<ResultAboutDTO>
@{
    ViewData["Title"] = "Hakkımda Bilgileri";
    Layout = "~/Areas/Admin/Views/Shared/_AdminDashboardLayout.cshtml";
}

<!-- 🟡 Üst Başlık -->
<div class="d-flex flex-wrap align-items-center justify-content-between mb-4 gap-2">
    <div class="d-flex align-items-center gap-2">
        <h4 class="fw-semibold text-dark mb-0">
            <i class="fa-solid fa-user-pen text-warning me-2"></i>Hakkımda Bilgileri
        </h4>
    </div>
    <div class="d-flex gap-2">
        <button class="btn btn-warning text-dark fw-semibold shadow-sm" data-bs-toggle="modal" data-bs-target="#addAboutModal">
            <i class="fa-solid fa-bolt me-1"></i> Hızlı Hakkımda Ekle
        </button>
        <a href="/Admin/About/CreateAbout" class="btn btn-outline-warning fw-semibold shadow-sm">
            <i class="fa-solid fa-plus me-1"></i> Tam Sayfada Ekle
        </a>
    </div>
</div>

<!-- 🔹 Listeleme Alanı -->
<div id="aboutGrid" class="about-grid" style="display:grid;grid-template-columns:repeat(auto-fill,minmax(320px,1fr));gap:20px;">
    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-light border text-center py-4">
            <i class="fa-regular fa-face-frown me-2 text-warning"></i>
            Henüz hakkımda bilgisi eklenmemiş.
        </div>
    }
    else
    {
        foreach (var a in Model)
        {
            <div class="about-card position-relative" id="about-@a.AboutID">
                <div class="card-body text-center">
                    <h6 class="fw-bold mb-2 text-dark"><i class="fa-solid fa-align-left text-warning me-2"></i>@a.AboutDescription</h6>
                    <ul class="list-unstyled small text-muted mb-3">
                        <li><i class="fa-solid fa-location-dot text-warning me-2"></i>@a.AboutAddress</li>
                        <li><i class="fa-solid fa-envelope text-warning me-2"></i>@a.AboutEmail</li>
                        <li><i class="fa-solid fa-phone text-warning me-2"></i>@a.AboutPhone</li>
                    </ul>
                    <div class="mt-3 d-flex justify-content-center gap-2">
                        <a href="/Admin/About/UpdateAbout/@a.AboutID" class="btn btn-sm btn-outline-warning fw-semibold px-3">
                            <i class="fa-solid fa-pen-to-square"></i> Güncelle
                        </a>
                        <button class="btn btn-sm btn-outline-danger fw-semibold px-3" onclick="confirmDelete('@a.AboutID')">
                            <i class="fa-solid fa-trash"></i> Sil
                        </button>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- 🟨 Hızlı Hakkımda Ekle Modal -->
<div class="modal fade" id="addAboutModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 shadow-lg rounded-4 overflow-hidden">
            <div class="modal-header bg-warning text-dark py-3 px-4 border-0">
                <h5 class="modal-title fw-semibold">
                    <i class="fa-solid fa-user-plus me-2"></i>Yeni Hakkımda Ekle
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>

            <form id="quickAboutForm" class="bg-light py-3 px-4">
                <div class="row g-3">
                    <div class="col-md-12">
                        <label class="form-label fw-semibold text-secondary">
                            <i class="fa-solid fa-align-left text-warning me-1"></i> Açıklama
                        </label>
                        <input type="text" id="AboutDescription" class="form-control form-control-sm shadow-sm" placeholder="Kendinizden bahsedin..." required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-semibold text-secondary">
                            <i class="fa-solid fa-location-dot text-warning me-1"></i> Adres
                        </label>
                        <input type="text" id="AboutAddress" class="form-control form-control-sm shadow-sm" placeholder="Adres giriniz..." />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-semibold text-secondary">
                            <i class="fa-solid fa-envelope text-warning me-1"></i> Mail
                        </label>
                        <input type="email" id="AboutEmail" class="form-control form-control-sm shadow-sm" placeholder="E-posta adresiniz..." />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-semibold text-secondary">
                            <i class="fa-solid fa-phone text-warning me-1"></i> Telefon
                        </label>
                        <input type="text" id="AboutPhone" class="form-control form-control-sm shadow-sm" placeholder="Telefon numaranız..." />
                    </div>
                </div>

                <div class="mt-4 d-flex justify-content-end gap-2">
                    <button type="button" class="btn btn-light border shadow-sm px-3" data-bs-dismiss="modal">
                        <i class="fa-solid fa-xmark"></i> İptal
                    </button>
                    <button type="submit" class="btn btn-warning text-dark fw-semibold shadow-sm px-4">
                        <i class="fa-solid fa-check me-1"></i> Kaydet
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // 🔥 Silme işlemi
        function confirmDelete(id) {
            Swal.fire({
                title: "Emin misiniz?",
                text: "Bu kayıt kalıcı olarak silinecek!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#dc3545",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Evet, sil!",
                cancelButtonText: "İptal"
            }).then(result => {
                if (result.isConfirmed) {
                    fetch(`/Admin/About/DeleteAbout/${id}`, { method: "GET" })
                        .then(r => {
                            if (r.ok) {
                                document.getElementById(`about-${id}`)?.remove();
                                Swal.fire({ icon: "success", title: "Silindi!", showConfirmButton: false, timer: 1300 });
                            }
                        });
                }
            });
        }

        // ⚡ Hızlı Ekleme – AJAX + DOM + localStorage “Yeni Eklendi”
        document.getElementById("quickAboutForm").addEventListener("submit", function (e) {
            e.preventDefault();
            const desc = document.getElementById("AboutDescription").value.trim();
            const addr = document.getElementById("AboutAddress").value.trim();
            const mail = document.getElementById("AboutEmail").value.trim();
            const phone = document.getElementById("AboutPhone").value.trim();

            if (!desc) {
                Swal.fire({ icon: "warning", title: "Eksik Bilgi", text: "Açıklama zorunludur!" });
                return;
            }

            const fd = new FormData();
            fd.append("AboutDescription", desc);
            fd.append("AboutAddress", addr);
            fd.append("AboutEmail", mail);
            fd.append("AboutPhone", phone);

            fetch("/Admin/About/CreateAboutAjax", { method: "POST", body: fd })
            .then(r => r.json())
            .then(res => {
                if (res && res.success) {
                    const grid = document.getElementById("aboutGrid");
                    const card = document.createElement("div");
                    card.className = "about-card highlight-new";
                    card.id = `about-${res.aboutID}`;
                    card.innerHTML = `
                        <div class="card-body text-center">
                            <h6 class="fw-bold mb-2 text-dark"><i class="fa-solid fa-align-left text-warning me-2"></i>${desc}</h6>
                            <ul class="list-unstyled small text-muted mb-3">
                                <li><i class="fa-solid fa-location-dot text-warning me-2"></i>${addr}</li>
                                <li><i class="fa-solid fa-envelope text-warning me-2"></i>${mail}</li>
                                <li><i class="fa-solid fa-phone text-warning me-2"></i>${phone}</li>
                            </ul>
                            <div class="new-badge">✨ Yeni Eklendi</div>
                            <div class="mt-3 d-flex justify-content-center gap-2">
                                <a href="/Admin/About/UpdateAbout/${res.aboutID}" class="btn btn-sm btn-outline-warning fw-semibold px-3">
                                    <i class="fa-solid fa-pen-to-square"></i> Güncelle
                                </a>
                                <button class="btn btn-sm btn-outline-danger fw-semibold px-3" onclick="confirmDelete('${res.aboutID}')">
                                    <i class="fa-solid fa-trash"></i> Sil
                                </button>
                            </div>
                        </div>`;
                    grid.prepend(card);

                    const now = Date.now(), expire = now + (3 * 24 * 60 * 60 * 1000);
                    const store = JSON.parse(localStorage.getItem("newAbouts") || "{}");
                    store[res.aboutID] = expire;
                    localStorage.setItem("newAbouts", JSON.stringify(store));

                    Swal.fire({ icon: "success", title: "Eklendi!", text: res.message, showConfirmButton: false, timer: 1200 });
                    this.reset();
                    const modal = bootstrap.Modal.getInstance(document.getElementById("addAboutModal"));
                    modal.hide();
                } else {
                    Swal.fire({ icon: "warning", title: "İşlem Engellendi", text: res.message });
                }
            });
        });

        // ✨ 3 Gün “Yeni Eklendi” etiketi
        document.addEventListener("DOMContentLoaded", () => {
            const newId = '@TempData["NewAboutID"]';
            if (newId) {
                const now = Date.now(), expire = now + (3 * 24 * 60 * 60 * 1000);
                const store = JSON.parse(localStorage.getItem("newAbouts") || "{}");
                store[newId] = expire;
                localStorage.setItem("newAbouts", JSON.stringify(store));
            }

            const stored = JSON.parse(localStorage.getItem("newAbouts") || "{}");
            const now2 = Date.now();
            for (const [id, exp] of Object.entries(stored)) {
                if (exp > now2) {
                    const card = document.getElementById(`about-${id}`);
                    if (card) {
                        card.classList.add("highlight-new");
                        if (!card.querySelector(".new-badge")) {
                            const badge = document.createElement("div");
                            badge.className = "new-badge";
                            badge.innerHTML = "✨ Yeni Eklendi";
                            card.appendChild(badge);
                        }
                    }
                } else delete stored[id];
            }
            localStorage.setItem("newAbouts", JSON.stringify(stored));
        });
    </script>

    <style>
        .about-card {
            background: #fff;
            border-radius: 16px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            border: 1px solid rgba(255,193,7,0.3);
            transition: all .3s ease;
            position: relative;
        }

            .about-card:hover {
                transform: translateY(-6px);
                box-shadow: 0 10px 20px rgba(255,193,7,0.35);
            }

        .highlight-new {
            box-shadow: 0 0 18px rgba(255,215,0,0.8) !important;
        }

        .new-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: linear-gradient(90deg,#ffd700,#ffb703);
            color: #222;
            font-weight: 700;
            font-size: .8rem;
            padding: 4px 8px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.2);
            animation: twinkle 1.6s infinite;
        }

        @@keyframes twinkle {
            0%, 100% {
                filter: brightness(1);
            }

            50% {
                filter: brightness(1.7);
            }
        }
    </style>
}
